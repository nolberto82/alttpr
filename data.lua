const = setmetatable({},
    {
        __index =
        {
            MAIN_TASK = 0x10,
            SUB_TASK = 0x11,
            INDOORS = 0x1b,
            FRAME_COUNTER = 0X1A,
            PAD_NEW_F0 = 0xf0,
            PAD_NEW_F2 = 0xf2,
            PAD_OLD_F4 = 0xf4,
            PAD_OLD_F6 = 0xf6,
            ZOOM_MODE = 0x636,
            NMI_FLAG = 0x710,
            SPRITE_BASE = 0x840,
            OAM_ATTR = 0xa04,
            DELAY = 15,
            GMULATOR = 1,
            MESEN = 2,
            BIZHAWK = 3,
            RIGHT = 0x01,
            LEFT = 0x02,
            DOWN = 0X04,
            UP = 0X08,
            R = 0X10,
            L = 0X20,
            X = 0X40,
            Y = 0x40,
            B = 0X80
        },
        __newindex = function() end
    })

local Item = {}
function Item:new(id, xy, bits, total, coords, floor)
    self = {}
    self.id = id
    self.xy = xy
    self.bits = bits
    self.total = total
    self.coords = coords
    self.floor = floor
    return self
end

item_rooms_data_lw = {}
item_ow_data_01_lw = {}
item_rooms_data_dw = {}
item_ow_data_01_dw = {}
specialitems_lw = {}
specialitems_dw = {}
dungeonitemlocations = {}
digits = {}
spritenumber0graphic = {}

--link's house - entrance 01
item_rooms_data_lw[1] = Item:new({ 0x0208 }, { 0x887c }, { 0 }, { 0x01 })
--sanctuary - entrance 02
item_rooms_data_lw[2] = Item:new({ 0x0024 }, { 0x753b }, { 0 }, { 0x01 })
--rooms hyrule castle - entrance 04
item_rooms_data_lw[3] = Item:new({ 0x00e4, 0x00e2, 0x0100, 0x0064, 0x0022, 0x0022, 0x0022 }, { 0x7f4f },
    { 0, 0, 0, 0, 0, 1, 2 }, { 0x07 })
--secret entrance hyrule castle - entrance 32
item_rooms_data_lw[4] = Item:new({ 0x00aa }, { 0x934e }, { 0 }, { 0x01 })
--cave of lumberjacks - entrance 12
item_rooms_data_lw[5] = Item:new({ 0x01c4 }, { 0x5c19 }, { 5 }, { 0x01 })
--cave death mountain 1 - entrance 1c
item_rooms_data_lw[6] = Item:new({ 0x01fc }, { 0xb422 }, { 0 }, { 0x01 })
--cave death mountain 2 - entrance 1e
item_rooms_data_lw[7] = Item:new({ 0x01fe, 0x01fe }, { 0xc11d }, { 0, 1 }, { 0x02 })
--cave death mountain 3 - entrance 1f
item_rooms_data_lw[8] = Item:new({ 0x01de, 0x01de, 0x01de, 0x01de, 0x01de }, { 0xc427 }, { 0, 1, 2, 3, 4 }, { 0x05 })
--cave death mountain 4 - entrance 23
item_rooms_data_lw[9] = Item:new({ 0x01d4 }, { 0x7c19 }, { 6 }, { 0x01 })
--rooms hyrule castle agahnim - entrance 24
item_rooms_data_lw[10] = Item:new({ 0x01c0, 0x01a0 }, { 0x7f47 }, { 0, 0 }, { 0x02 })
--cave lost woods - entrance 25
item_rooms_data_lw[11] = Item:new({ 0x01c2 }, { 0x451f }, { 5 }, { 0x01 })
--rooms eastern palace - entrance 08
item_rooms_data_lw[12] = Item:new({ 0x0172, 0x0154, 0x0150, 0x0152, 0x0170, 0x0190 }, { 0xd84d }, { 0, 0, 0, 0, 0, 7 },
    { 0x06 })
--rooms desert palace - entrance 09
item_rooms_data_lw[13] = Item:new({ 0x010a, 0x00ea, 0x00e8, 0x00e6, 0x00e6, 0x0066 }, { 0x218d }, { 0, 0, 0, 0, 6, 7 },
    { 0x06 })
--rooms tower of hera - entrance 33
item_rooms_data_lw[14] = Item:new({ 0x010e, 0x010e, 0x00ee, 0x004e, 0x004e, 0x000e }, { 0x8a0e }, { 0, 6, 0, 0, 1, 7 },
    { 0x06 })
--cave kakariko village - entrance 39
item_rooms_data_lw[15] = Item:new({ 0x005e, 0x005e, 0x005e, 0x005e, 0x005e }, { 0x1d4c }, { 0, 1, 2, 3, 4 }, { 0x05 })
--tavern kakariko village - entrance 42
item_rooms_data_lw[16] = Item:new({ 0x0206 }, { 0x3960 }, { 0 }, { 0x01 })
--sahasrahla's hideout - entrance 45
item_rooms_data_lw[17] = Item:new({ 0x020a, 0x020a, 0x020a }, { 0xbd4f }, { 0, 1, 2 }, { 0x03 })
--sweeping woman kakariko village - entrance 4b
item_rooms_data_lw[18] = Item:new({ 0x0210 }, { 0x2a61 }, { 0 }, { 0x01 })
--cave aginah desert - entrance 4d
item_rooms_data_lw[19] = Item:new({ 0x0214 }, { 0x3d97 }, { 0 }, { 0x01 })
--swamp ruins - entrance 4e
item_rooms_data_lw[20] = Item:new({ 0x0216 }, { 0x77ae }, { 0 }, { 0x01 })
--cave death mountain 5 - entrance 4f
item_rooms_data_lw[21] = Item:new({ 0x0218 }, { 0xbe15 }, { 0 }, { 0x01 })
--cave south of flute guy(same room after this) - entrance 51
item_rooms_data_lw[22] = Item:new({ 0x0236 }, { 0x8637 }, { 5 }, { 0x01 })
--cave graveyard(same room as previous one) - entrance 52
item_rooms_data_lw[23] = Item:new({ 0x0236 }, { 0x4c97 }, { 6 }, { 0x01 })
--cave of ice - entrance 56
item_rooms_data_lw[24] = Item:new({ 0x0240 }, { 0xd687 }, { 0 }, { 0x01 })
--cave waterfall - entrance 5c
item_rooms_data_lw[25] = Item:new({ 0x0228, 0x0228 }, { 0xca1b }, { 0, 1 }, { 0x02 })
--blinds' house kakariko village - entrance 61
item_rooms_data_lw[26] = Item:new({ 0x023a, 0x023a, 0x023a, 0x023a, 0x023a }, { 0x2f4d }, { 0, 1, 2, 3, 4 }, { 0x05 })
--cave west of lake hylia - entrance 6c
item_rooms_data_lw[27] = Item:new({ 0x0246, 0x0246, 0x0246, 0x0246, 0x0246 }, { 0xa2ac }, { 0, 1, 2, 3, 6 }, { 0x05 })
--cave west of sanctuary - entrance 6e
item_rooms_data_lw[28] = Item:new({ 0x0248 }, { 0x633e }, { 0 }, { 0x01 })
--cave east of desert palace - entrance 72
item_rooms_data_lw[29] = Item:new({ 0x024c }, { 0x388e }, { 5 }, { 0x01 })
--king's tomb - entrance 72
item_rooms_data_lw[30] = Item:new({ 0x0226 }, { 0x8e3a }, { 0 }, { 0x01 })
--hill near tower death mountain - area 03
item_ow_data_01_lw[1] = Item:new({ 0x0283 }, { 0x8015 }, { 6 }, { 0x01 })
--floating island death mountain - area 05
item_ow_data_01_lw[2] = Item:new({ 0x0285 }, { 0xaf10 }, { 6 }, { 0x01 })
--race game kakariko village - area 28
item_ow_data_01_lw[3] = Item:new({ 0x02a8 }, { 0x197c }, { 6 }, { 0x01 })
--grove hidden treasure - area 2a
item_ow_data_01_lw[4] = Item:new({ 0x02aa }, { 0x5375 }, { 6 }, { 0x01 })
--desert ledge - area 30
item_ow_data_01_lw[5] = Item:new({ 0x02b0 }, { 0x0aa8 }, { 6 }, { 0x01 })
--lake hylia island - area 35
item_ow_data_01_lw[6] = Item:new({ 0x02b5 }, { 0xad95 }, { 6 }, { 0x01 })
--lake swamp - area 3b
item_ow_data_01_lw[7] = Item:new({ 0x02bb }, { 0x6fad }, { 6 }, { 0x01 })
--dw death mountain cave 1 - entrance 13
item_rooms_data_dw[1] = Item:new({ 0x01f0, 0x01f0 }, { 0xbc1f }, { 0, 1 }, { 0x02 })
--dark palace - entrance 26
item_rooms_data_dw[2] = Item:new(
    { 0x0012, 0x0074, 0x0014, 0x0054, 0x0054, 0x0056, 0x0034, 0x0034, 0x0034, 0x0032, 0x0032, 0x00d4, 0x00d4, 0x00b4 },
    { 0xd542 }, { 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 1, 0, 1, 7 }, { 0x0e })
--swamp palace - entrance 25
item_rooms_data_dw[3] = Item:new({ 0x0050, 0x006e, 0x006c, 0x008c, 0x0068, 0x006a, 0x00ec, 0x00ec, 0x00cc, 0x000c },
    { 0x75a8 }, { 0, 0, 0, 0, 0, 0, 0, 1, 0, 7 }, { 0x0a })
--skull woods - entrance 28
item_rooms_data_dw[4] = Item:new({ 0x00b0, 0x00b0, 0x00d0, 0x00ce, 0x00ae, 0x00ae, 0x00b2, 0x0052 }, { 0x2626 },
    { 0, 1, 0, 0, 0, 1, 0, 7 }, { 0x08 })
--thieves' town - entrance 34
item_rooms_data_dw[5] = Item:new({ 0x01b6, 0x01b6, 0x01b8, 0x0196, 0x00ca, 0x0088, 0x008a, 0x0158 }, { 0x2a56 },
    { 0, 1, 0, 0, 0, 0, 0, 7 }, { 0x08 })
--ice palace - entrance 2d
item_rooms_data_dw[6] = Item:new({ 0x005c, 0x003e, 0x00be, 0x00fc, 0x013c, 0x015c, 0x007e, 0x01bc }, { 0xbe98 },
    { 0, 0, 0, 0, 0, 0, 0, 7 }, { 0x08 })
--misery mire - entrance 27
item_rooms_data_dw[7] = Item:new({ 0x0184, 0x0186, 0x0186, 0x0166, 0x0144, 0x0182, 0x01a2, 0x0120 }, { 0x238a },
    { 0, 0, 1, 0, 0, 0, 0, 7 }, { 0x08 })
--turtle rock - entrance 35
item_rooms_data_dw[8] = Item:new(
    { 0x01ac, 0x016e, 0x016e, 0x016c, 0x0028, 0x0048, 0x0008, 0x01aa, 0x01aa, 0x01aa, 0x01aa, 0x0148 },
    { 0xda1f }, { 0, 0, 1, 0, 0, 0, 0, 0, 1, 2, 3, 7 }, { 0x0c })
--ganon's tower - entrance 37
item_rooms_data_dw[9] = Item:new(
    { 0x0118, 0x0118, 0x0118, 0x0118, 0x0118, 0x00f6, 0x00f6, 0x00f6, 0x00f6, 0x0116, 0x00fa, 0x0038, 0x0038, 0x0038, 0x013a, 0x013a, 0x013a, 0x013a, 0x00f8, 0x00f8, 0x00f8, 0x00f8, 0x007a, 0x007a, 0x007a, 0x009a, 0x011a },
    { 0x8810 }, { 0, 1, 2, 3, 6, 0, 1, 2, 3, 0, 0, 0, 1, 2, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 0, 0 }, { 0x1b })
--dw death mountain cave 2 - entrance 3a
item_rooms_data_dw[10] = Item:new({ 0x0078, 0x0078, 0x0078, 0x0078 }, { 0xb817 }, { 0, 1, 2, 3 }, { 0x04 })
--cave northeast of swamp palace - entrance 3d
item_rooms_data_dw[11] = Item:new({ 0x023c, 0x023c, 0x023c, 0x023c, 0x023c }, { 0x9390 }, { 0, 1, 2, 3, 6 }, { 0x05 })
--dw death mountain cave 3 - entrance 41
item_rooms_data_dw[12] = Item:new({ 0x022e }, { 0x8922 }, { 0 }, { 0x01 })
--dw treasure game village of outcasts - entrance 47
item_rooms_data_dw[13] = Item:new({ 0x020c }, { 0x2157 }, { 6 }, { 0x01 })
--hut village of outcasts - entrance 48
item_rooms_data_dw[14] = Item:new({ 0x020c }, { 0x2b6c }, { 0 }, { 0x01 })
--c shaped house village of outcasts - entrance 54
item_rooms_data_dw[15] = Item:new({ 0x0238 }, { 0x4157 }, { 0 }, { 0x01 })
--cave left of misery mire - entrance 5f
item_rooms_data_dw[16] = Item:new({ 0x021a, 0x021a }, { 0x198a }, { 0, 1 }, { 0x02 })
--cave of pegs - entrance 83
item_rooms_data_dw[17] = Item:new({ 0x024e }, { 0x566c }, { 6 }, { 0x01 })
--pyramid fairy
item_rooms_data_dw[18] = Item:new({ 0x022c, 0x022c }, { 0x7656 }, { 0, 1 }, { 0x02 })
--bumper cave ledge - area 4a
item_ow_data_01_dw[1] = Item:new({ 0x02ca }, { 0x6124 }, { 6 }, { 0x01 })
--pyramid ledge - area 5b
item_ow_data_01_dw[2] = Item:new({ 0x02db }, { 0x8b51 }, { 6 }, { 0x01 })
--digging game - area 68
item_ow_data_01_dw[3] = Item:new({ 0x02e8 }, { 0x1c7a }, { 6 }, { 0x01 })
--master sword pedestal- area 80
specialitems_lw[1] = Item:new({ 0x0300 }, { 0x2d10 }, { 6 }, { 0x01 })
--zora's ledge - area 81
specialitems_lw[2] = Item:new({ 0x0301 }, { 0xd41b }, { 6 }, { 0x01 })
--secret entrance hyrule castle - entrance 32
specialitems_lw[3] = Item:new({ 0x03c6 }, { 0x884e }, { 0 }, { 0x01 })
--guy under bridge - area 80
specialitems_lw[4] = Item:new({ 0x03c9 }, { 0xa77f }, { 0 }, { 0x01 })
--bottle guy kakariko village - area 18
specialitems_lw[5] = Item:new({ 0x03c9 }, { 0x2f56 }, { 1 }, { 0x01 })
--old man - area 03
specialitems_lw[6] = Item:new({ 0x0410 }, { 0x6f2d }, { 0 }, { 0x01 })
--zora king - area 81
specialitems_lw[7] = Item:new({ 0x0410 }, { 0xdc1b }, { 1 }, { 0x01 })
--bug catching kid kakariko village - entrance 40
specialitems_lw[8] = Item:new({ 0x0410 }, { 0x395b }, { 2 }, { 0x01 })
--sahasrahla's hideout - area 1e
specialitems_lw[9] = Item:new({ 0x0410 }, { 0xbd54 }, { 4 }, { 0x01 })
--library - area 29
specialitems_lw[10] = Item:new({ 0x0410 }, { 0x3778 }, { 7 }, { 0x01 })
--ether tablet death mountain - area 03
specialitems_lw[11] = Item:new({ 0x0411 }, { 0x720d }, { 0 }, { 0x01 })
--bombos tablet desert - area 30
specialitems_lw[12] = Item:new({ 0x0411 }, { 0x3fa8 }, { 1 }, { 0x01 })
--blacksmith kakariko village - entrance 64
specialitems_lw[13] = Item:new({ 0x0411 }, { 0x5763 }, { 2 }, { 0x01 })
--mushroom spot - area 00
specialitems_lw[14] = Item:new({ 0x0411 }, { 0x3a16 }, { 4 }, { 0x01 })
--witch's hut - area 16
specialitems_lw[15] = Item:new({ 0x0411 }, { 0xb940 }, { 5 }, { 0x01 })
--magic bat - area e3
specialitems_lw[16] = Item:new({ 0x0411 }, { 0x5a66 }, { 7 }, { 0x01 })
--purple chest - area 62
specialitems_dw[1] = Item:new({ 0x03c9 }, { 0x5763 }, { 4 }, { 0x01 })
--stumpy - area 6a
specialitems_dw[2] = Item:new({ 0x0410 }, { 0x577c }, { 3 }, { 0x01 })
--catfish - area 4f
specialitems_dw[3] = Item:new({ 0x0410 }, { 0xcc27 }, { 5 }, { 0x01 })

itemsxy =
{
    { --00 sewers
        --B1
        { 0xc8, 0xb2, 0x016f, 0x60, 0x0064, 0 },
        { 0xaf, 0x95, 0x016f, 0x60, 0x0022, 0 },
        { 0xb0, 0x95, 0x016f, 0x60, 0x0022, 1 },
        { 0xb1, 0x95, 0x016f, 0x60, 0x0022, 2 },
        --1F
        { 0xb4, 0x3e, 0x016f, 0x60, 0x0024, 0 },
    },
    { --02 hyrule castle
        --B1					
        { 0xb4, 0x40, 0x010f, 0x60, 0x00e4, 0 },
        { 0xa8, 0x48, 0x010f, 0x60, 0x00e2, 0 },
        { 0xa7, 0x9e, 0x00af, 0x60, 0x0100, 0 },
    },
    { --04 eastern palace
        --1F
        { 0xb8, 0xb5, 0x001f, 0x00, 0x0172, 0 },
        { 0xc9, 0xa7, 0x001f, 0x00, 0x0154, 0 },
        { 0x9f, 0x9e, 0x001f, 0x00, 0x0150, 0 },
        { 0xb3, 0xa6, 0x001f, 0x00, 0x0152, 0 },
        { 0xa8, 0xb0, 0x001f, 0x00, 0x0170, 0 },
        --2F/boss room
        { 0x98, 0x28, 0x001f, 0x00, 0x0190, 7 },
    },
    { --06 desert palace
        --B1					
        { 0xc8, 0xbe, 0xffbf, 0x00, 0x010a, 0 },
        { 0xc8, 0xae, 0xffbf, 0x00, 0x00ea, 0 },
        { 0xb4, 0xb0, 0xffbf, 0x00, 0x00e8, 0 },
        { 0xa0, 0xb0, 0xffbf, 0x00, 0x00e6, 0 },
        { 0xa7, 0xaf, 0xffbf, 0x00, 0x00e6, 6 },
        --2F/boss room					
        { 0xb0, 0x27, 0x001f, 0x00, 0x0066, 7 }
    },
    { --08 hyrule castle upper
        --2F				
        { 0xba, 0x41, 0xfe4f, 0x60, 0x01c0, 0 },
        --3F
        { 0xae, 0x42, 0xfeaf, 0x60, 0x01a0, 0 }
    },
    { --0a swamp palace
        --1F
        { 0xd2, 0x4f, 0x007f, 0x00, 0x0050, 0 },
        --B1
        { 0xc6, 0x50, 0x001f, 0x60, 0x006e, 0 },
        { 0xb4, 0x53, 0x001f, 0x60, 0x006c, 0 },
        { 0xb0, 0x5e, 0x001f, 0x60, 0x008c, 0 },
        { 0xa2, 0x50, 0x001f, 0x60, 0x006a, 0 },
        { 0x92, 0x50, 0x001f, 0x60, 0x0068, 0 },
        { 0xb0, 0x2a, 0x001f, 0x60, 0x000c, 7 },
        --B2
        { 0xb7, 0xa6, 0x001f, 0x60, 0x00ec, 0 },
        { 0xb9, 0xa6, 0x001f, 0x60, 0x00ec, 1 },
        { 0xb5, 0x98, 0x001f, 0x60, 0x00cc, 0 },

    },
    { --0c dark palace
        --B1
        { 0xb3, 0xc1, 0x007f, 0x00, 0x0012, 0 },
        { 0xb4, 0xb2, 0x007f, 0x00, 0x0014, 0 },
        { 0xb6, 0x97, 0x007f, 0x00, 0x00d4, 0 },
        { 0xbb, 0x97, 0x007f, 0x00, 0x00d4, 1 },
        { 0xb8, 0x8a, 0x007f, 0x00, 0x00b4, 7 },
        --1F
        { 0xc0, 0x48, 0x007f, 0x00, 0x0056, 0 },
        { 0xbb, 0x47, 0x007f, 0x00, 0x0054, 0 },
        { 0xb8, 0x47, 0x007f, 0x00, 0x0054, 1 },
        { 0xb4, 0x50, 0x007f, 0x00, 0x0074, 0 },
        { 0xaf, 0x34, 0x007f, 0x00, 0x0034, 0 },
        { 0xb8, 0x30, 0x007f, 0x00, 0x0034, 1 },
        { 0xb6, 0x38, 0x007f, 0x00, 0x0034, 2 },
        { 0xa5, 0x2e, 0x007f, 0x00, 0x0032, 0 },
        { 0xaa, 0x39, 0x007f, 0x00, 0x0032, 1 },
    },
    { --0e misery mire
        --B1
        { 0xc6, 0x4e, 0x001f, 0x60, 0x0184, 0 },
        { 0xce, 0x50, 0x001f, 0x60, 0x0186, 1 },
        { 0xd8, 0x4e, 0x001f, 0x60, 0x0186, 0 },
        { 0xd1, 0x48, 0x001f, 0x60, 0x0166, 0 },
        { 0xc8, 0x30, 0x001f, 0x60, 0x0144, 0 },
        { 0xb0, 0x4f, 0x001f, 0x60, 0x0182, 0 },
        { 0xb8, 0x68, 0x001f, 0x60, 0x01a2, 0 },
        { 0xa0, 0x2a, 0x001f, 0x60, 0x0120, 7 },
    },
    { --10 skull woods
        --B1
        { 0xc0, 0x55, 0x007f, 0x00, 0x00b0, 0 },
        { 0xca, 0x56, 0x007f, 0x00, 0x00b0, 1 },
        { 0xc5, 0x63, 0x007f, 0x00, 0x00d0, 0 },
        { 0xb8, 0x63, 0x007f, 0x00, 0x00ce, 0 },
        { 0xb0, 0x4f, 0x007f, 0x00, 0x00ae, 0 },
        { 0xb6, 0x56, 0x007f, 0x00, 0x00ae, 1 },
        { 0x91, 0x47, 0x007f, 0x00, 0x00b2, 0 },
    },
    { --12 ice palace
        --B1
        { 0xb8, 0x51, 0x028f, 0x60, 0x005c, 0 },
        { 0xc8, 0x49, 0x028f, 0x60, 0x003e, 0 },
        --B2
        { 0xc2, 0x49, 0x022f, 0x60, 0x007e, 0 },
        --B3
        { 0xbf, 0x49, 0x01cf, 0x60, 0x00be, 0 },
        --B4
        { 0xb0, 0x48, 0x016f, 0x60, 0x00fc, 0 },
        --B5
        { 0xae, 0x46, 0x010f, 0x60, 0x013c, 0 },
        { 0xb7, 0x51, 0x010f, 0x60, 0x015c, 0 },
        --B7
        { 0xb8, 0xb2, 0x00af, 0x60, 0x01bc, 7 },
    },
    { --14 tower of hera
        --1F
        { 0xb0, 0xa8, 0xfebf, 0x00, 0x010e, 6 },
        { 0xb7, 0xa8, 0xfebf, 0x00, 0x010e, 0 },
        --2F
        { 0xb4, 0x40, 0xfebf, 0x60, 0x00ee, 0 },
        --4F
        { 0xb4, 0x40, 0xff7f, 0x60, 0x004e, 0 },
        { 0xb4, 0x44, 0xff7f, 0x60, 0x004e, 1 },
        --6F/boss room
        { 0xb4, 0x43, 0x003f, 0x00, 0x000e, 7 },
    },
    { --16 thieves' town
        --1F
        { 0xb6, 0x36, 0x008f, 0x00, 0x00ca, 0 },
        --B1
        { 0xa1, 0x61, 0x002f, 0x60, 0x01b6, 0 },
        { 0xa9, 0x67, 0x002f, 0x60, 0x01b6, 1 },
        { 0xa2, 0x55, 0x002f, 0x60, 0x0196, 0 },
        { 0xb2, 0x65, 0x002f, 0x60, 0x01b8, 0 },
        { 0xb8, 0x3a, 0x002f, 0x60, 0x0158, 7 },
        --B2
        { 0xa0, 0xa8, 0x002f, 0x00, 0x0088, 0 },
        { 0xba, 0x9f, 0x002f, 0x00, 0x008a, 0 },

    },
    { --18 turtle rock
        --1F
        { 0xc0, 0x65, 0x013f, 0x00, 0x01ac, 0 },
        { 0xcf, 0x3e, 0x013f, 0x00, 0x016e, 0 },
        { 0xd1, 0x3e, 0x013f, 0x00, 0x016e, 1 },
        { 0xc0, 0x3e, 0x013f, 0x00, 0x016c, 0 },
        --B1
        { 0xb3, 0x42, 0x00df, 0x60, 0x0028, 0 },
        { 0xb8, 0x55, 0x00df, 0x60, 0x0048, 0 },
        { 0xae, 0x30, 0x00df, 0x60, 0x0008, 0 },
        --B2
        { 0xb3, 0x4f, 0x007f, 0x60, 0x01aa, 0 },
        { 0xae, 0x51, 0x007f, 0x60, 0x01aa, 1 },
        { 0xb3, 0x53, 0x007f, 0x60, 0x01aa, 2 },
        { 0xae, 0x55, 0x007f, 0x60, 0x01aa, 3 },
        --B3
        { 0xa0, 0x8a, 0x007f, 0x60, 0x0148, 7 },
    },
    { --1a ganon's tower
        --B1
        { 0xb8, 0x9f, 0xfdef, 0x60, 0x0038, 0 },
        { 0xb7, 0x9e, 0xfdef, 0x60, 0x0038, 1 },
        { 0xb9, 0x9e, 0xfdef, 0x60, 0x0038, 2 },
        --1F
        { 0xb0, 0x48, 0xfdef, 0x60, 0x0118, 0 },
        { 0xb6, 0x3e, 0xfdef, 0x60, 0x0118, 1 },
        { 0xbb, 0x3e, 0xfdef, 0x60, 0x0118, 2 },
        { 0xbb, 0x49, 0xfdef, 0x60, 0x0118, 3 },
        { 0xb1, 0x40, 0xfdef, 0x60, 0x0118, 6 },
        { 0x9e, 0x36, 0xfdef, 0x60, 0x00f6, 0 },
        { 0xa3, 0x36, 0xfdef, 0x60, 0x00f6, 1 },
        { 0x9e, 0x38, 0xfdef, 0x60, 0x00f6, 2 },
        { 0xa3, 0x38, 0xfdef, 0x60, 0x00f6, 3 },
        { 0xc0, 0x30, 0xfdef, 0x60, 0x00fa, 0 },
        { 0xb0, 0x48, 0xfdef, 0x60, 0x0116, 0 },
        { 0xc0, 0x3e, 0xfdef, 0x60, 0x011a, 0 },
        { 0xb7, 0x2f, 0xfdef, 0x60, 0x00f8, 0 },
        { 0xb9, 0x2f, 0xfdef, 0x60, 0x00f8, 1 },
        { 0xb7, 0x31, 0xfdef, 0x60, 0x00f8, 2 },
        { 0xb9, 0x31, 0xfdef, 0x60, 0x00f8, 3 },
        { 0xc0, 0x4f, 0xfdef, 0x60, 0x013a, 0 },
        { 0xc1, 0x4f, 0xfdef, 0x60, 0x013a, 1 },
        { 0xc0, 0x51, 0xfdef, 0x60, 0x013a, 2 },
        { 0xc1, 0x51, 0xfdef, 0x60, 0x013a, 3 },
        --6F			
        { 0xc6, 0x2e, 0xffcf, 0x60, 0x007a, 0 },
        { 0xca, 0x2e, 0xffcf, 0x60, 0x007a, 1 },
        { 0xc0, 0x38, 0xffcf, 0x60, 0x007a, 2 },
        { 0xc5, 0x47, 0xffcf, 0x60, 0x009a, 0 },
    }
}

digits = { 0x83, 0x7f, 0x79, 0x6c, 0x6d, 0x6e, 0x6f, 0x7c, 0x7d, 0x7e }
spritenumber0graphic =
{
    0x3c, 0x00, 0x7e, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0x7e, 0x00, 0x3c, 0x00,
    0xc3, 0x3c, 0xbd, 0x7e, 0x66, 0xff, 0x66, 0xff, 0x66, 0xff, 0x66, 0xff, 0xbd, 0x7e, 0xc3, 0x3c
}

worldnames = { "Light World", "Dark World" }
travelpos =
{
    [1] =
    {
        { "Eastern Palace",         { 0x0600, 0x0ed6, 0x062b, 0x0f50, 0x0000, 0xfffa, 0x001e, 0x005a, 0x066d, 0x0f5b } },
        { "Desert Palace",          { 0x0c57, 0x00a6, 0x0cbb, 0x0128, 0x0007, 0xfffa, 0x0030, 0x0314, 0x0cc6, 0x0133 } },
        { "Tower of Hera",          { 0x0015, 0x087c, 0x007b, 0x08f0, 0x0007, 0xfff4, 0x0003, 0x0050, 0x0086, 0x08fb } },
        { "Hyrule Castle",          { 0x069b, 0x0784, 0x0702, 0x07f8, 0xfffc, 0xfffa, 0x001b, 0x0530, 0x0711, 0x0803 } },
        { "Hyrule Castle Upper",    { 0x0647, 0x0784, 0x069a, 0x07f8, 0x0004, 0xfffa, 0x001b, 0x0230, 0x06a9, 0x0803 } },
        { "Sanctuary",              { 0x0400, 0x06de, 0x043b, 0x0758, 0x0000, 0x0002, 0x0013, 0x001c, 0x046d, 0x0763 } },
        { "Link's House",           { 0x0a9b, 0x0832, 0x0afb, 0x08b8, 0x0003, 0xfffe, 0x002c, 0x0506, 0x0b0a, 0x08bf } },
        { "Kakariko Village",       { 0x0759, 0x017e, 0x07b7, 0x0200, 0x0007, 0x0002, 0x0018, 0x0b30, 0x07c6, 0x020b } },
        { "Library",                { 0x0a18, 0x0200, 0x0a7b, 0x0278, 0x0006, 0x0000, 0x0029, 0x0100, 0x0a87, 0x028d } },
        { "Den of Thieves",         { 0x01f6, 0x0272, 0x025b, 0x02e8, 0x0007, 0x000e, 0x0000, 0x0f4e, 0x0266, 0x02ef } },
        { "Sahasrahla's Hideout",   { 0x06d9, 0x0c76, 0x0739, 0x0cf0, 0x0005, 0x000a, 0x001e, 0x0710, 0x0748, 0x0cfb } },
        { "Swamp Ruins",            { 0x0e83, 0x0700, 0x0eeb, 0x0778, 0x000b, 0x0000, 0x003b, 0x04a0, 0x0efa, 0x077d } },
        { "Cave 45",                { 0x0cc3, 0x0400, 0x0d6e, 0x045f, 0x0009, 0x0000, 0x0032, 0x0680, 0x0d34, 0x0485 } },
        { "Grove",                  { 0x0b1e, 0x047c, 0x0be0, 0x04ea, 0x0000, 0xfff8, 0x002a, 0x090e, 0x0b8d, 0x04f5 } },
        { "Lockpicker",             { 0x0e00, 0x0500, 0x0e58, 0x0570, 0x0000, 0xfffa, 0x003a, 0x001e, 0x0e75, 0x057b } },
        { "Lumberjacks",            { 0x0084, 0x04e6, 0x00eb, 0x0558, 0x0007, 0x000a, 0x0002, 0x039e, 0x00f6, 0x0563 } },
        { "Pond of Happiness",      { 0x0d6b, 0x0c3e, 0x0dcb, 0x0cb8, 0x0003, 0xfff2, 0x0035, 0x0bc6, 0x0dda, 0x0cc3 } },
        { "Lake Hylia Cave",        { 0x0ea1, 0x0a00, 0x0f0a, 0x0a68, 0xfff4, 0x0000, 0x0035, 0x1500, 0x0f19, 0x0a85 } },
        { "Blacksmith's House",     { 0x0819, 0x0466, 0x087b, 0x04d8, 0x0003, 0xfffa, 0x0022, 0x000c, 0x088a, 0x04e3 } },
        { "Ice Cave",               { 0x0c00, 0x0e26, 0x0c49, 0x0e98, 0x0000, 0xfffa, 0x0037, 0x0084, 0x0c6f, 0x0ea3 } },
        { "Death Mountain Lower",   { 0x0295, 0x0604, 0x02fb, 0x0678, 0x0007, 0xfffc, 0x0003, 0x1402, 0x0306, 0x0683 } },
        { "Death Mountain East",    { 0x0094, 0x0d00, 0x00fa, 0x0db8, 0x0008, 0x0000, 0x0005, 0x0460, 0x0105, 0x0d7d } },
        { "Death Mountain Paradox", { 0x0305, 0x0d00, 0x036b, 0x0dc8, 0x0007, 0x0000, 0x0005, 0x17e0, 0x0376, 0x0d7d } },
        { "Magic Shop",             { 0x0516, 0x0c4e, 0x0578, 0x0cc8, 0xfffa, 0xfff2, 0x0016, 0x0888, 0x0583, 0x0cd3 } },
        { "Waterfall of Wishing",   { 0x0200, 0x0ecd, 0x021e, 0x0f3f, 0x0000, 0xfff3, 0x000f, 0x0098, 0x026f, 0x0f4a } },
        { "Master Sword",           { 0x0047, 0x0023, 0x00af, 0x00a0, 0x0003, 0xfff6, 0x0000, 0x0182, 0x00ba, 0x00a7 } },
    },
    [2] =
    {
        { "Dark Palace",        { 0x0600, 0x0edd, 0x0658, 0x0f50, 0x0000, 0x0003, 0x005e, 0x005c, 0x066f, 0x0f5a } },
        { "Swamp Ruins",        { 0x0e8c, 0x06f2, 0x0eeb, 0x0778, 0x0003, 0xfffe, 0x007b, 0x049e, 0x0efa, 0x077f } },
        { "Skull Woods",        { 0x01f6, 0x0272, 0x025b, 0x02e8, 0x0007, 0xfffe, 0x0040, 0x0f4c, 0x0266, 0x02ef } },
        { "Thieves' Town",      { 0x075b, 0x0176, 0x07bb, 0x01f8, 0x0003, 0xfffa, 0x0058, 0x0b2e, 0x07ca, 0x0203 } },
        { "Ice Palace",         { 0x0d6b, 0x0c3e, 0x0dcb, 0x0cb8, 0x0003, 0xfff2, 0x0075, 0x0bc6, 0x0dda, 0x0cc3 } },
        { "Misery Mire",        { 0x0c56, 0x00a6, 0x0cec, 0x0128, 0x0002, 0xfffa, 0x0070, 0x0494, 0x0cfb, 0x0133 } },
        { "Turtle Rock",        { 0x007d, 0x0e93, 0x00f8, 0x0f08, 0xfff8, 0xfffa, 0x0047, 0x0492, 0x0107, 0x0f13 } },
        { "Ganon's Tower",      { 0x0000, 0x0884, 0x003b, 0x08f8, 0x0000, 0xfffc, 0x0043, 0x0052, 0x006f, 0x0903 } },
        { "Pyramid",            { 0x0600, 0x0772, 0x0658, 0x07f1, 0x0000, 0x000d, 0x005b, 0x0030, 0x066f, 0x07f8 } },
        { "Hype Cave",          { 0x0c0e, 0x0900, 0x0c7d, 0x0988, 0xfff5, 0x0000, 0x0074, 0x00a0, 0x0c88, 0x097d } },
        { "Catfish",            { 0x031e, 0x0ec0, 0x03e0, 0x0f82, 0x0000, 0x0000, 0x004f, 0x0920, 0x038d, 0x0f7d } },
        { "Bumper Cave",        { 0x020b, 0x0500, 0x026b, 0x05b8, 0x0003, 0x0000, 0x004a, 0x00a0, 0x027a, 0x058d } },
        { "Stumpy",             { 0x0b1e, 0x047c, 0x0be0, 0x04ea, 0x0000, 0xfff8, 0x006a, 0x090e, 0x0b8d, 0x04f5 } },
        { "Blacksmith's House", { 0x0810, 0x0453, 0x088f, 0x04d8, 0xfff1, 0xfffa, 0x0062, 0x010c, 0x089e, 0x04e3 } },
    }
}

curremu = nil
if mem then
    curremu = const.GMULATOR
elseif emu.read16 then
    curremu = const.MESEN
else
    curremu = const.BIZHAWK
end

regs =
{
    { ["a"] = "a", ["x"] = "x", ["y"] = "y", ["sp"] = "sp", ["pc"] = "pc" },
    { ["a"] = "a", ["x"] = "x", ["y"] = "y", ["sp"] = "sp", ["pc"] = "pc" },
    { ["a"] = "A", ["x"] = "X", ["y"] = "Y", ["sp"] = "SP", ["pc"] = "PC" },
    { ["a"] = "a", ["x"] = "x", ["y"] = "y", ["sp"] = "sp", ["pc"] = "pc" },
}

getheight = nil

if curremu == const.SNES9X then
    function testbit(c)
        return function(v, b)
            return bit.band(v, b) == b
        end
    end
else
    function testbit(v, b)
        local mask = 1 << b
        return (v & mask) == mask
    end
end

if curremu == const.GMULATOR then
    u8 = mem.readbyte
    u16 = mem.readword
    w8 = mem.writebyte
    w16 = mem.writeword

    getregister = function(r) return emu.getregister(r) end
    setregister = function(r, v) emu.setregister(r, v) end

    callbackexec = Type.Exec
    callbackframe = Type.Frame
    addmemcallback = emu.memcallback
    addeventcallback = emu.eventcallback

    drawtext = function(x, y, text, format, fgcolor, bgcolor)
        if format ~= "" then
            gui.drawtext(x, y, string.format(format, text), fgcolor, bgcolor)
        else
            gui.drawtext(x, y, text, fgcolor, bgcolor)
        end
    end

    drawrect = function(x, y, w, h, color, fill)
        gui.drawrect(x, y, w, h, color, fill)
    end
elseif curremu == const.MESEN then
    u8 = function(a) return emu.read(a, emu.memType.snesMemory) end
    u16 = function(a) return emu.read16(a, emu.memType.snesMemory) end
    w8 = function(a, v) emu.write(a, v, emu.memType.cpu) end
    w16 = function(a, v) emu.write16(a, v, emu.memType.cpu) end

    getregister = function(reg)
        local s = emu.getState()
        return s["cpu." .. reg]
    end

    setregister = function(reg, v)
        local s = emu.getState()
        s["cpu." .. reg] = v
        emu.setState(s)
    end

    local size = emu.getScreenSize()
    getheight = size.height

    callbackexec = emu.callbackType.exec
    callbackframe = emu.eventType.endFrame

    addmemcallback = emu.addMemoryCallback
    addeventcallback = emu.addEventCallback

    drawtext = function(x, y, text, format, fgcolor, bgcolor)
        --fgcolor = (fgcolor & 0xff0000) >> 16 | fgcolor & 0x00ff00 | (fgcolor & 0xff) << 16
        emu.drawString(x, y, string.format(format, text), fgcolor, bgcolor)
    end

    drawrect = function(x, y, w, h, color, fill)
        emu.drawRectangle(x, y, w, h, color, fill)
    end

    drawline = emu.drawLine
elseif curremu == const.BIZHAWK then
    u8 = function(a)
        if a < 0x800000 then
            return memory.read_u8(a & 0x1ffff, "WRAM")
        else
            return memory.read_u8(a, "CARTROM")
        end
    end
    u16 = function(a)
        if a < 0x800000 then
            return memory.read_u16_le(a & 0x1ffff, "WRAM")
        else
            return memory.read_u16_le(a, "CARTROM")
        end
    end
    w8 = function(a, v) memory.write_u8(a & 0x1ffff, v, "WRAM") end
    w16 = function(a, v) memory.write_u16_le(a & 0x1ffff, v, "WRAM") end

    function memcallback(c)
        return function(f, a, n)
            return c(f, a, n)
        end
    end

    function evtcallback(c)
        return function(f)
            return c(f)
        end
    end

    getregister = emu.getregister
    setregister = emu.setregister
    addmemcallback = event.on_bus_exec
    addeventcallback = evtcallback(event.onframeend)

    drawtext = function(x, y, text, format, fgcolor, bgcolor)
        local fontsize = 10
        local fontfamily = "Verdana"
        if format ~= "" then
            gui.drawText(x, y, string.format(format, text), fgcolor, bgcolor, fontsize, fontfamily)
        else
            gui.drawText(x, y, text, fgcolor, bgcolor, fontsize, fontfamily)
        end
    end

    drawrect = function(x, y, w, h, bgcolor)
        gui.drawRectangle(x, y, w, h, 0xff000000, bgcolor)
    end

    drawline = function(x, y, x2, y2, color, surf)
        gui.drawLine(x, y, x2, y2, color)
    end
end
